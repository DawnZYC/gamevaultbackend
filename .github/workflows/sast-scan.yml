# ==========================================
# SAST Scan Workflow
# Based on Workshop 8 - Static Application Security Testing
# ==========================================

name: "SAST - Security Vulnerability Scan"

on:
  push:
    branches: [dev/master, master, main]
  pull_request:
    branches: [dev/master, master, main]
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    name: OWASP Dependency Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Download OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.9/dependency-check-9.0.9-release.zip
          unzip -q dependency-check-9.0.9-release.zip

      - name: Run OWASP Dependency Check
        env:
          NVD_API_KEY: ${{ secrets.NVD_TOKEN }}
        run: |
          ./scripts/dependency-check.sh \
            --project "GameVault Backend" \
            --scan . \
            --format HTML \
            --format JSON \
            --format XML \
            --out ./dependency-check-report \
            --nvdApiKey ${NVD_TOKEN:-""} \
            --suppression ./dependency-check-suppression.xml || true
        continue-on-error: true

      - name: Parse Vulnerability Results
        if: always()
        run: |
          echo "##SAST Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f "./dependency-check-report/dependency-check-report.json" ]; then
            CRITICAL=$(grep -o '"severity":"CRITICAL"' ./dependency-check-report/dependency-check-report.json | wc -l || echo "0")
            HIGH=$(grep -o '"severity":"HIGH"' ./dependency-check-report/dependency-check-report.json | wc -l || echo "0")
            MEDIUM=$(grep -o '"severity":"MEDIUM"' ./dependency-check-report/dependency-check-report.json | wc -l || echo "0")
            LOW=$(grep -o '"severity":"LOW"' ./dependency-check-report/dependency-check-report.json | wc -l || echo "0")

            echo "### Vulnerabilities Found:" >> $GITHUB_STEP_SUMMARY
            echo "- Critical: $CRITICAL" >> $GITHUB_STEP_SUMMARY
            echo "- High: $HIGH" >> $GITHUB_STEP_SUMMARY
            echo "- Medium: $MEDIUM" >> $GITHUB_STEP_SUMMARY
            echo "- Low: $LOW" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            if [ "$CRITICAL" -gt 0 ]; then
              echo "**Critical vulnerabilities detected! Immediate action required.**" >> $GITHUB_STEP_SUMMARY
            elif [ "$HIGH" -gt 0 ]; then
              echo "**High severity vulnerabilities detected. Please review.**" >> $GITHUB_STEP_SUMMARY
            else
              echo "**No critical or high severity vulnerabilities found.**" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "Report not generated" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Dependency Check Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sast-dependency-check-report
          path: ./dependency-check-report/
          retention-days: 30

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sast-dependency-check-report-html
          path: |
            ./dependency-check-report.html

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean compile -B

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
